#include "Module.h"

namespace mtv {

  /* -------------------------------------------------------------------------------------------
   * Default constructor
   * ------------------------------------------------------------------------------------------- */
  Module::Module(int capabilities) : QObject(), capabilities(capabilities)
  {
    this->setSetting("threaded",false);
  }

  /* -------------------------------------------------------------------------------------------
   * Destructor
   * ------------------------------------------------------------------------------------------- */
  Module::~Module() {

  }

  /* -------------------------------------------------------------------------------------------
   *
   * ------------------------------------------------------------------------------------------- */
  bool Module::isCapable(int flag) {
    return this->capabilities & flag;
  }

  /* -------------------------------------------------------------------------------------------
   *
   * ------------------------------------------------------------------------------------------- */
  bool Module::isInputOnly() {
    return (this->isCapable(CAPINPUT) && !this->isCapable(CAPOUTPUT));
  }

  /* -------------------------------------------------------------------------------------------
   *
   * ------------------------------------------------------------------------------------------- */
  bool Module::isOutputOnly() {
     return (this->isCapable(CAPOUTPUT) && !this->isCapable(CAPINPUT));
  }

  /* -------------------------------------------------------------------------------------------
   *
   * ------------------------------------------------------------------------------------------- */
  bool Module::hasSetting(const QString name) {
    return this->settings.contains(name);
  }

  /* -------------------------------------------------------------------------------------------
   *
   * ------------------------------------------------------------------------------------------- */
  QVariant Module::getSetting(const QString name) {
    if(!this->settings.contains(name)) return 0x0;
    return this->settings[name];
  }

  /* -------------------------------------------------------------------------------------------
   *
   * ------------------------------------------------------------------------------------------- */
  void Module::setSetting(const QString name, QVariant value) {
    this->settings[name] = value;
  }

  /* -------------------------------------------------------------------------------------------
   *
   * ------------------------------------------------------------------------------------------- */
  QVariant Module::getSettingDescription(const QString name) {
    if(!this->settingDescriptions.contains(name)) return 0x0;
    return this->settingDescriptions[name];
  }

  /* -------------------------------------------------------------------------------------------
   *
   * ------------------------------------------------------------------------------------------- */
  void Module::setSettingDescription(const QString name, QVariant value) {
    this->settingDescriptions[name] = value;
  }

  /* -------------------------------------------------------------------------------------------
   *
   * ------------------------------------------------------------------------------------------- */
  bool chain(Module* module) {

  }

  bool unchain(Module *module) {

  }



}
