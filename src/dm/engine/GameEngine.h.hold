/* -------------------------------------------------------------------------------------------
 *                                  M U L T I - T A B L E
 *  -------------------------------------------------------------------------------------------
 *                               Copyright 2011 Guy van den Berg
 *                                      All Rights Reserved
 * ------------------------------------------------------------------------------------------- */
#ifndef GAMEENGINE_H
#define GAMEENGINE_H

#include <QObject>
#include <QSqlDatabase>

#include "map/MapScene.h"

class GameEngine : public QObject
{
    Q_OBJECT
public:
    GameEngine();
    ~GameEngine();


    /* Game Controll */
    bool isGameLoaded();
    void closeGame();
    void openGame(const QString name);

    /* Manage the available maps in the game */
    void addMap(const QString name);
    void removeMap(const QString name);
    QString getDefaultMapName();
    void setDefaultMapName(const QString name);

    /* set a reference to the current scene */
    void setMapScene(MT::MapScene *map);
private:

   QSqlDatabase database;
   QString name;

   MT::MapScene *map;


   void checkCreateTables();

   bool tableExists(const QString name);

   void createTableSettings();
   void createTableMaps();

   /* database helpers */
   void executeStatement(const QString statement);


   /* manipulate the key/value pairs in the settings table */
   void setSetting(const QString key, const QString value);
   QString getSetting(const QString key);
   bool settingKeyExists(const QString key);


signals:

public slots:

};

#endif // GAMEENGINE_H

